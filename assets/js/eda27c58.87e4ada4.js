"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6548],{4137:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=o,b=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(b,i(i({ref:t},u),{},{components:r})):n.createElement(b,i({ref:t},u))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8082:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(4137));const a={},i="Extra Observation Builders",s={unversionedId:"observation_builders",id:"observation_builders",title:"Extra Observation Builders",description:"rlgym-tools provides a number of community-made observation builders that are commonly used.",source:"@site/tools/observation_builders.md",sourceDirName:".",slug:"/observation_builders",permalink:"/rlgym.github.io/tools/observation_builders",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Extra Action Parsers",permalink:"/rlgym.github.io/tools/extra_action_parsers"},next:{title:"Rewards Functions",permalink:"/rlgym.github.io/tools/reward_functions"}},l={},c=[{value:"GeneralStacker",id:"generalstacker",level:2},{value:"AdvancedStacker",id:"advancedstacker",level:2}],u={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,o.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"extra-observation-builders"},"Extra Observation Builders"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"rlgym-tools")," provides a number of community-made observation builders that are commonly used."),(0,o.kt)("h2",{id:"generalstacker"},"GeneralStacker"),(0,o.kt)("p",null,"This will stack the observations from an existing ",(0,o.kt)("inlineCode",{parentName:"p"},"ObsBuilder")," over time into one long observation.\nTo use it, we simply give it an ",(0,o.kt)("inlineCode",{parentName:"p"},"ObsBuilder")," to stack and tell it how many steps we would like it to stack for."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import rlgym\nfrom rlgym_tools.extra_obs import GeneralStacker\nfrom rlgym.utils.obs_builders import AdvancedObs\n\nobs_builder = AdvancedObs()\n\n# Stack the observations from AdvancedObs over 5 steps.\nobs_stacker = GeneralStacker(obs_builder, stack_size=5)\n\nenv = rlgym.make(obs_builder=obs_stacker)\n")),(0,o.kt)("h2",{id:"advancedstacker"},"AdvancedStacker"),(0,o.kt)("p",null,"This is similar to the ",(0,o.kt)("inlineCode",{parentName:"p"},"AdvancedObs")," object that comes with RLGym, with the inclusion of every action taken over the previous ",(0,o.kt)("inlineCode",{parentName:"p"},"stack_size")," steps."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import rlgym\nfrom rlgym_tools.extra_obs import AdvancedStacker\n\nobs_builder = AdvancedStacker(stack_size=5)\n\nenv = rlgym.make(obs_builder=obs_builder)\n")))}d.isMDXComponent=!0}}]);