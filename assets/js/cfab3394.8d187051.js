"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4998],{3905:(e,a,t)=>{t.d(a,{Zo:()=>i,kt:()=>h});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=n.createContext({}),p=function(e){var a=n.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},i=function(e){var a=p(e.components);return n.createElement(m.Provider,{value:a},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,m=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),c=p(t),u=r,h=c["".concat(m,".").concat(u)]||c[u]||d[u]||s;return t?n.createElement(h,l(l({ref:a},i),{},{components:t})):n.createElement(h,l({ref:a},i))}));function h(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,l=new Array(s);l[0]=u;var o={};for(var m in a)hasOwnProperty.call(a,m)&&(o[m]=a[m]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<s;p++)l[p]=t[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2732:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var n=t(7462),r=(t(7294),t(3905));const s={},l="Ball to goal rewards",o={unversionedId:"documentation/reward_functions/common_rewards/ball_to_goal_rewards",id:"documentation/reward_functions/common_rewards/ball_to_goal_rewards",title:"Ball to goal rewards",description:"Ball to goal rewards are functions that measure some relationship between the ball and the opponent's goal.",source:"@site/docs/documentation/reward_functions/common_rewards/ball_to_goal_rewards.md",sourceDirName:"documentation/reward_functions/common_rewards",slug:"/documentation/reward_functions/common_rewards/ball_to_goal_rewards",permalink:"/rlgym.github.io/docs/documentation/reward_functions/common_rewards/ball_to_goal_rewards",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Common Reward Functions",permalink:"/rlgym.github.io/docs/documentation/reward_functions/common_rewards/"},next:{title:"Conditional rewards",permalink:"/rlgym.github.io/docs/documentation/reward_functions/common_rewards/conditional_rewards"}},m={},p=[{value:"Liu Distance Ball To Goal Reward",id:"liu-distance-ball-to-goal-reward",level:2},{value:"Velocity Ball To Goal Reward",id:"velocity-ball-to-goal-reward",level:2},{value:"Ball Y Coordinate Reward",id:"ball-y-coordinate-reward",level:2}],i={toc:p},c="wrapper";function d(e){let{components:a,...t}=e;return(0,r.kt)(c,(0,n.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ball-to-goal-rewards"},"Ball to goal rewards"),(0,r.kt)("p",null,"Ball to goal rewards are functions that measure some relationship between the ball and the opponent's goal."),(0,r.kt)("h2",{id:"liu-distance-ball-to-goal-reward"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/lucas-emery/rocket-league-gym/blob/7f07bfa980b84eea11627939dd7d7b1689efcfa7/rlgym/utils/reward_functions/common_rewards/ball_goal_rewards.py#L9"},"Liu Distance Ball To Goal Reward")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://arxiv.org/pdf/2105.12196.pdf"},"Inspired by: From Motor Control to Team Play in Simulated Humanoid Football")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"LiuDistanceBallToGoalReward(own_goal=False):\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from rlgym.utils.reward_functions.common_rewards import LiuDistancePlayerToBallReward\n\nliu_distance = LiuDistancePlayerToBallReward()\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Determine which team the agent is on, and set the opponent's goal as the objective.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Compute the normalized distance between the position of the ball, and the center of the opponent's goal.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Note that the point returned is in the center of the net, shifted to the back wall inside the net, such that the distance between the ball and the objective can never be zero."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"dist = np.linalg.norm(state.ball.position - objective) - (BACK_NET_Y - BACK_WALL_Y + BALL_RADIUS)\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Return ",(0,r.kt)("span",{parentName:"p",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("msup",{parentName:"mrow"},(0,r.kt)("mi",{parentName:"msup"},"e"),(0,r.kt)("mfrac",{parentName:"msup"},(0,r.kt)("mrow",{parentName:"mfrac"},(0,r.kt)("mo",{parentName:"mrow"},"\u2212"),(0,r.kt)("mtext",{parentName:"mrow"},"distance"),(0,r.kt)("mo",{parentName:"mrow"},"\u2217"),(0,r.kt)("mn",{parentName:"mrow"},"0.5")),(0,r.kt)("mtext",{parentName:"mfrac"},"max_ball_speed")))),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"e^{\\frac {- \\text{distance} * 0.5} { \\text{max\\_ball\\_speed}} }")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1.1196em"}}),(0,r.kt)("span",{parentName:"span",className:"mord"},(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"e"),(0,r.kt)("span",{parentName:"span",className:"msupsub"},(0,r.kt)("span",{parentName:"span",className:"vlist-t"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.1196em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-3.5036em",marginRight:"0.05em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size6 size3 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mopen nulldelimiter sizing reset-size3 size6"}),(0,r.kt)("span",{parentName:"span",className:"mfrac"},(0,r.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.88em"}},(0,r.kt)("span",{parentName:"span",style:{top:"-2.656em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size3 size1 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord text mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"max_ball_speed"))))),(0,r.kt)("span",{parentName:"span",style:{top:"-3.2255em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,r.kt)("span",{parentName:"span",className:"frac-line mtight",style:{borderBottomWidth:"0.049em"}})),(0,r.kt)("span",{parentName:"span",style:{top:"-3.384em"}},(0,r.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,r.kt)("span",{parentName:"span",className:"sizing reset-size3 size1 mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"\u2212"),(0,r.kt)("span",{parentName:"span",className:"mord text mtight"},(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"distance")),(0,r.kt)("span",{parentName:"span",className:"mbin mtight"},"\u2217"),(0,r.kt)("span",{parentName:"span",className:"mord mtight"},"0.5"))))),(0,r.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,r.kt)("span",{parentName:"span",className:"vlist-r"},(0,r.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.5654em"}},(0,r.kt)("span",{parentName:"span"}))))),(0,r.kt)("span",{parentName:"span",className:"mclose nulldelimiter sizing reset-size3 size6"}))))))))))))))),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"return np.exp(-0.5 * dist / BALL_MAX_SPEED)\n")))),(0,r.kt)("p",null,"This results in an exponential curve which is at its maximum when the ball is closest to the center of the net."),(0,r.kt)("h2",{id:"velocity-ball-to-goal-reward"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/lucas-emery/rocket-league-gym/blob/7f07bfa980b84eea11627939dd7d7b1689efcfa7/rlgym/utils/reward_functions/common_rewards/ball_goal_rewards.py#L29"},"Velocity Ball To Goal Reward")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"VelocityBallToGoalReward(own_goal=False, use_scalar_projection=False)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from rlgym.utils.reward_functions.common_rewards import VelocityBallToGoalReward\n\nvelocity_ball_goal_reward = VelocityBallToGoalReward()\n")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Determine which team the agent is on, and set the opponent's goal as the objective."),(0,r.kt)("li",{parentName:"ol"},"Get the linear velocity of the ball."),(0,r.kt)("li",{parentName:"ol"},"Determine the difference between the objective (goal from step 1) and the current ball position."),(0,r.kt)("li",{parentName:"ol"},"Return the scalar projection of the ball's velocity vector on to the objective vector.")),(0,r.kt)("h2",{id:"ball-y-coordinate-reward"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/lucas-emery/rocket-league-gym/blob/7f07bfa980b84eea11627939dd7d7b1689efcfa7/rlgym/utils/reward_functions/common_rewards/ball_goal_rewards.py#L60"},"Ball Y Coordinate Reward")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"BallYCoordinateReward(exponent=1)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from rlgym.utils.reward_functions.common_rewards import BallYCoordinateReward\n\nball_y_reward = BallYCoordinateReward()\n")),(0,r.kt)("p",null,"Incentivize higher ball heights"))}d.isMDXComponent=!0}}]);